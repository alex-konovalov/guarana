Concrete TODO:

- write manual part set up malcev correspondence:
  - try to make it short. 
  - how should the userinterface look like? 
    should we introduce the malcev object to the user ?
  - write some examples 
    (list your T-groups in a convenient interface)
  - write some testcases

- write manual part of malcev collection 
  - keep it lean
  - essentially for the moment we demand a complicated input. 
  - how do we set malcev collection as underlying collector ? 
  - include test functions for timing

- clean up package 
  - which code should not be contained ?
  - this should be remove with the packing script
  - remove old TODOs 

To do:

- before publishin the package:
  go throught essential parts, 
  define the user interfaces and add test files.
  add a global testfile.

-----------------------------------------------------------------------------

- write function that provides the important families of examples
  that I already have. Don't forget the small exams ( good for comparing
  with Cftl). 
  In the moment are missing: Free nilpotent by free abelian exams. 
- write function that measure the timing. 
- construct more exams ( -> Werner )
- Test malcev collection. 
- How can I set it as underlying collector ? 
- Run group computations with Malcev collector. 
- Construct an example for which all features of the 
  Mal'cev correspondence are going to be needed. 
  Use for example random subgrups of the triangular 
  groups.


- clean up code in gap/supple

- integrate code from symbolic.g
  How can we speed up the computation of the star polynomials ? 

- investigate why the computation of the log,exp polynomials
  is so  fast, once we have the star polys. 
  For example in F_2,8 using the symbolic Lie bracket is very slow. 
  But it seems that using the star pols for computing log and exp
  does not take much more time.


- Long term aim:
  The user comes along with a pc-group G.
 
  In a first step a good polycyclic sequence of G is computed. 
  Second the Mal'cev correspondence is set up and everything else
  that is needed for the fast multiplication. 
  Then collection can be performed using this setup. 

  It seems reasonable to have a record like 
  recLieAlg 
  that contains everything that is needed to go back
  and forwards between N and L(N). 

  Probably it is not so good to attach information to N,
  because N might change or at least the pcp presentation 
  of it. 
 
